# WebSocket Proxy with Load Balancing
#
# Like the other examples, but there are three WS backends (ws1, ws2, ws3).
# Each client must always be forwarded to the same backend (e.g. when using
# HTTPS requests).

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream webmodule {
    # Note:
    # Cannot use ip_hash cause most of the labeler's public IP address are the same.
    hash $remote_addr$remote_port consistent;

    # Available backend servers
    server webmodule:8000;
}

upstream inferencemodule {
    # Note:
    # Cannot use ip_hash cause most of the labeler's public IP address are the same.
    hash $remote_addr$remote_port consistent;

    # Available backend servers
    server inferencemodule:5000;
}

upstream uploadmodule {
    # Note:
    # Cannot use ip_hash cause most of the labeler's public IP address are the same.
    hash $remote_addr$remote_port consistent;

    # Available backend servers
    server uploadmodule:7000;
}

server {

    # see simple-wss.conf or simple-ws.conf

    listen 8181;

    # server_name factory-ai.example.com;
    # ssl_certificate     /usr/share/nginx/ssl/cert_chain.crt;
    # ssl_certificate_key /usr/share/nginx/ssl/linkernetworks_ai.key;
    # ssl_session_timeout 5m;
    # ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;

    location /video_feed {
        # resolver 127.0.0.11 valid=10s;
        #set $inferencemodule http://inferencemodule:5000;
        #proxy_pass $inferencemodule;
        proxy_pass http://inferencemodule;
        proxy_read_timeout 120;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /cancel_upload {
        # resolver 127.0.0.11 valid=10s;
        #set $uploadmodule http://uploadmodule:7000;
        #proxy_pass $uploadmodule;
        proxy_pass http://uploadmodule;
        proxy_read_timeout 120;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
        # switch access log off
        access_log off;
        error_log /var/log/nginx/error.log warn;
        add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';

        # redirect all HTTP traffic to localhost:8181
        proxy_pass http://webmodule;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # WebSocket support (nginx 1.4)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Path rewriting
        rewrite /services/myservice/(.*) /$1 break;
        proxy_redirect off;
    }
}
